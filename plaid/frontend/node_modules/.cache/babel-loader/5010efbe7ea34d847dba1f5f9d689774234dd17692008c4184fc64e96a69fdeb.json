{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\russk\\\\OneDrive\\\\Documents\\\\Wealth-Wise\\\\quickstart\\\\frontend\\\\src\\\\Components\\\\Headers\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport Callout from \"plaid-threads/Callout\";\nimport Button from \"plaid-threads/Button\";\nimport InlineLink from \"plaid-threads/InlineLink\";\nimport Link from \"../Link\";\nimport Context from \"../../Context\";\nimport styles from \"./index.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const {\n    itemId,\n    accessToken,\n    linkToken,\n    linkSuccess,\n    isItemAccess,\n    backend,\n    linkTokenError,\n    isPaymentInitiation\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.grid,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.title,\n      children: \"Plaid Quickstart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), !linkSuccess ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: styles.subtitle,\n        children: \"A sample end-to-end integration with Plaid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.introPar,\n        children: \"The Plaid flow begins when your user wants to connect their bank account to your app. Simulate this by clicking the button below to launch Link - the client-side component that your users will interact with in order to link their accounts to Plaid and allow you to access their accounts via the Plaid API.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), !backend ? /*#__PURE__*/_jsxDEV(Callout, {\n        warning: true,\n        children: [\"Unable to fetch link_token: please make sure your backend server is running and that your .env file has been configured with your\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"PLAID_CLIENT_ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"PLAID_SECRET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 48\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this) : /* message if backend is running and there is no link token */\n      linkToken == null && backend ? /*#__PURE__*/_jsxDEV(Callout, {\n        warning: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unable to fetch link_token: please make sure your backend server is running and that your .env file has been configured correctly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"If you are on a Windows machine, please ensure that you have cloned the repo with\", \" \", /*#__PURE__*/_jsxDEV(InlineLink, {\n            href: \"https://github.com/plaid/quickstart#special-instructions-for-windows\",\n            target: \"_blank\",\n            children: \"symlinks turned on.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), \" \", \"You can also try checking your\", \" \", /*#__PURE__*/_jsxDEV(InlineLink, {\n            href: \"https://dashboard.plaid.com/activity/logs\",\n            target: \"_blank\",\n            children: \"activity log\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), \" \", \"on your Plaid dashboard.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error Code: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: linkTokenError.error_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error Type: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: linkTokenError.error_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error Message: \", linkTokenError.error_message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : linkToken === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.linkButton,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          large: true,\n          disabled: true,\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.linkButton,\n        children: /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isPaymentInitiation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: styles.subtitle,\n          children: [\"Congrats! Your payment is now confirmed.\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Callout, {\n            children: [\"You can see information of all your payments in the\", ' ', /*#__PURE__*/_jsxDEV(InlineLink, {\n              href: \"https://dashboard.plaid.com/activity/payments\",\n              target: \"_blank\",\n              children: \"Payments Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.requests,\n          children: \"Now that the 'payment_id' stored in your server, you can use it to access the payment information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      /* If not using the payment_initiation product, show the item_id and access_token information */\n      _jsxDEV(_Fragment, {\n        children: [isItemAccess ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: styles.subtitle,\n          children: [\"Congrats! By linking an account, you have created an\", \" \", /*#__PURE__*/_jsxDEV(InlineLink, {\n            href: \"http://plaid.com/docs/quickstart/glossary/#item\",\n            target: \"_blank\",\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: styles.subtitle,\n          children: /*#__PURE__*/_jsxDEV(Callout, {\n            warning: true,\n            children: \"Unable to create an item. Please check your backend server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.itemAccessContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.itemAccessRow,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.idName,\n              children: \"item_id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tokenText,\n              children: itemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.itemAccessRow,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.idName,\n              children: \"access_token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tokenText,\n              children: accessToken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), isItemAccess && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.requests,\n          children: \"Now that you have an access_token, you can make all of the following requests:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"DVpZJxkDmOMHWcBHyWniDb0/gOo=\");\n_c = Header;\nHeader.displayName = \"Header\";\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useContext","Callout","Button","InlineLink","Link","Context","styles","Header","itemId","accessToken","linkToken","linkSuccess","isItemAccess","backend","linkTokenError","isPaymentInitiation","grid","title","subtitle","introPar","error_code","error_type","error_message","linkButton","requests","itemAccessContainer","itemAccessRow","idName","tokenText","displayName"],"sources":["C:/Users/russk/OneDrive/Documents/Wealth-Wise/quickstart/frontend/src/Components/Headers/index.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport Callout from \"plaid-threads/Callout\";\r\nimport Button from \"plaid-threads/Button\";\r\nimport InlineLink from \"plaid-threads/InlineLink\";\r\n\r\nimport Link from \"../Link\";\r\nimport Context from \"../../Context\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst Header = () => {\r\n  const {\r\n    itemId,\r\n    accessToken,\r\n    linkToken,\r\n    linkSuccess,\r\n    isItemAccess,\r\n    backend,\r\n    linkTokenError,\r\n    isPaymentInitiation,\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <div className={styles.grid}>\r\n      <h3 className={styles.title}>Plaid Quickstart</h3>\r\n\r\n      {!linkSuccess ? (\r\n        <>\r\n          <h4 className={styles.subtitle}>\r\n            A sample end-to-end integration with Plaid\r\n          </h4>\r\n          <p className={styles.introPar}>\r\n            The Plaid flow begins when your user wants to connect their bank\r\n            account to your app. Simulate this by clicking the button below to\r\n            launch Link - the client-side component that your users will\r\n            interact with in order to link their accounts to Plaid and allow you\r\n            to access their accounts via the Plaid API.\r\n          </p>\r\n          {/* message if backend is not running and there is no link token */}\r\n          {!backend ? (\r\n            <Callout warning>\r\n              Unable to fetch link_token: please make sure your backend server\r\n              is running and that your .env file has been configured with your\r\n              <code>PLAID_CLIENT_ID</code> and <code>PLAID_SECRET</code>.\r\n            </Callout>\r\n          ) : /* message if backend is running and there is no link token */\r\n          linkToken == null && backend ? (\r\n            <Callout warning>\r\n              <div>\r\n                Unable to fetch link_token: please make sure your backend server\r\n                is running and that your .env file has been configured\r\n                correctly.\r\n              </div>\r\n              <div>\r\n                If you are on a Windows machine, please ensure that you have\r\n                cloned the repo with{\" \"}\r\n                <InlineLink\r\n                  href=\"https://github.com/plaid/quickstart#special-instructions-for-windows\"\r\n                  target=\"_blank\"\r\n                >\r\n                  symlinks turned on.\r\n                </InlineLink>{\" \"}\r\n                You can also try checking your{\" \"}\r\n                <InlineLink\r\n                  href=\"https://dashboard.plaid.com/activity/logs\"\r\n                  target=\"_blank\"\r\n                >\r\n                  activity log\r\n                </InlineLink>{\" \"}\r\n                on your Plaid dashboard.\r\n              </div>\r\n              <div>\r\n                Error Code: <code>{linkTokenError.error_code}</code>\r\n              </div>\r\n              <div>\r\n                Error Type: <code>{linkTokenError.error_type}</code>{\" \"}\r\n              </div>\r\n              <div>Error Message: {linkTokenError.error_message}</div>\r\n            </Callout>\r\n          ) : linkToken === \"\" ? (\r\n            <div className={styles.linkButton}>\r\n              <Button large disabled>\r\n                Loading...\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div className={styles.linkButton}>\r\n              <Link />\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {isPaymentInitiation ? (\r\n            <>\r\n            <h4 className={styles.subtitle}>\r\n              Congrats! Your payment is now confirmed.\r\n              <p/>\r\n              <Callout>\r\n                You can see information of all your payments in the{' '}\r\n                <InlineLink\r\n                    href=\"https://dashboard.plaid.com/activity/payments\"\r\n                    target=\"_blank\"\r\n                >\r\n                  Payments Dashboard\r\n                </InlineLink>\r\n                .\r\n              </Callout>\r\n            </h4>\r\n            <p className={styles.requests}>\r\n              Now that the 'payment_id' stored in your server, you can use it to access the payment information:\r\n            </p>\r\n          </>\r\n          ) : /* If not using the payment_initiation product, show the item_id and access_token information */ (\r\n            <>\r\n            {isItemAccess ? (\r\n                <h4 className={styles.subtitle}>\r\n                  Congrats! By linking an account, you have created an{\" \"}\r\n                  <InlineLink\r\n                      href=\"http://plaid.com/docs/quickstart/glossary/#item\"\r\n                      target=\"_blank\"\r\n                  >\r\n                    Item\r\n                  </InlineLink>\r\n                  .\r\n                </h4>\r\n            ) : (\r\n                <h4 className={styles.subtitle}>\r\n                  <Callout warning>\r\n                    Unable to create an item. Please check your backend server\r\n                  </Callout>\r\n                </h4>\r\n            )}\r\n            <div className={styles.itemAccessContainer}>\r\n              <p className={styles.itemAccessRow}>\r\n                <span className={styles.idName}>item_id</span>\r\n                <span className={styles.tokenText}>{itemId}</span>\r\n              </p>\r\n\r\n              <p className={styles.itemAccessRow}>\r\n                <span className={styles.idName}>access_token</span>\r\n                <span className={styles.tokenText}>{accessToken}</span>\r\n              </p>\r\n            </div>\r\n            {isItemAccess && (\r\n                <p className={styles.requests}>\r\n                  Now that you have an access_token, you can make all of the\r\n                  following requests:\r\n                </p>\r\n            )}\r\n          </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.displayName = \"Header\";\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nfunction _interopDefault(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e.default : e;\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar _tslib = require(\"../_tslib-48ab6b71.js\"),\n  React = require(\"react\"),\n  React__default = _interopDefault(React),\n  cx = _interopDefault(require(\"classnames\")),\n  styleInject_es = require(\"../style-inject.es-2745fd8c.js\"),\n  css = \".Touchable-module_resetButtonOrLink__hwe7O {\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n  display: inline-block;\\n  font-family: Cern, Helvetica, Arial, sans-serif;\\n  padding: 0;\\n  margin: 0;\\n  text-align: left;\\n  text-decoration: none;\\n  font-size: inherit;\\n  line-height: inherit; }\\n\\n.Touchable-module_block__WBbZm {\\n  display: block;\\n  min-width: 22.4rem; }\\n\\n.Touchable-module_centered__1VEx8 {\\n  text-align: center; }\\n\\n.Touchable-module_inline__Ae_81 {\\n  display: inline;\\n  margin-right: 2.4rem; }\\n  .Touchable-module_inline__Ae_81:last-child {\\n    margin-right: 0; }\\n\\n.Touchable-module_wide__EYer3 {\\n  min-width: 0;\\n  width: 100%; }\\n\\n.Touchable-module_hideFocus__3E0nw:focus {\\n  outline: none; }\\n\",\n  styles = {\n    _getCss: function () {\n      return css;\n    },\n    resetButtonOrLink: \"Touchable-module_resetButtonOrLink__hwe7O\",\n    block: \"Touchable-module_block__WBbZm\",\n    centered: \"Touchable-module_centered__1VEx8\",\n    inline: \"Touchable-module_inline__Ae_81\",\n    wide: \"Touchable-module_wide__EYer3\",\n    hideFocus: \"Touchable-module_hideFocus__3E0nw\"\n  };\nstyleInject_es.styleInject(css);\nvar Touchable = function (e) {\n  var n = e.ariaChecked,\n    t = e.ariaControls,\n    o = e.ariaLabel,\n    l = e.block,\n    i = e.centered,\n    a = e.children,\n    s = e.className,\n    r = e.component,\n    c = e.componentProps,\n    u = e.disabled,\n    _ = e.hideFocus,\n    d = e.href,\n    b = e.id,\n    h = e.inline,\n    m = e.onClick,\n    f = e.onFocus,\n    y = e.onMouseEnter,\n    p = e.onMouseLeave,\n    T = e.onMouseOver,\n    g = e.rel,\n    k = e.role,\n    v = e.tabIndex,\n    x = e.target,\n    w = e.to,\n    E = e.type,\n    M = void 0 === E ? \"button\" : E,\n    O = e.wide,\n    j = _tslib.__assign({\n      className: cx(styles.resetButtonOrLink, h && styles.inline, l && styles.block, O && styles.wide, _ && styles.hideFocus, i && styles.centered, s)\n    }, c);\n  if (r) {\n    var F = r;\n    return React__default.createElement(F, _tslib.__assign({}, j, {\n      to: w,\n      role: k\n    }), a);\n  }\n  return d ? React__default.createElement(\"a\", _tslib.__assign({}, j, {\n    \"aria-label\": o,\n    href: d,\n    id: b,\n    role: k,\n    target: x,\n    rel: g,\n    onClick: m,\n    onFocus: f,\n    onMouseEnter: y,\n    onMouseLeave: p,\n    onMouseOver: T\n  }), a) : React__default.createElement(\"button\", _tslib.__assign({}, j, {\n    id: b,\n    onClick: m,\n    onFocus: f,\n    onMouseEnter: y,\n    onMouseLeave: p,\n    onMouseOver: T,\n    type: M,\n    disabled: u,\n    role: k,\n    \"aria-checked\": n,\n    \"aria-label\": o,\n    \"aria-controls\": t,\n    tabIndex: v\n  }), a);\n};\nTouchable.displayName = \"Touchable\", exports.Touchable = Touchable, exports.default = Touchable, exports.styles = styles;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAkCaA,YAAsC,UAACC;EAAAA,IAClDC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IAAAC;IACAC;IAEMC;MACJrB,WAAWsB,GACTC,OAAOC,mBACPjB,KAAUgB,OAAOhB,QACjBV,KAAS0B,OAAO1B,OAChBuB,KAAQG,OAAOH,MACfhB,KAAamB,OAAOnB,WACpBN,KAAYyB,OAAOzB,UACnBE;IAAAA,GAECE;EAEL,IAAID,GAAW;IACb,IAAMwB,IAAYxB;IAClB,OACEyB,6BAACD,uBAAcJ;MAAOJ,IAAIA;MAAIH,MAAMA;IAAAA,IACjCf;EAAAA;EAIP,OAAIM,IAIAqB,sDACML;IAAAA,cACQzB;IACZS,MAAMA;IACNC,IAAIA;IACJQ,MAAMA;IACNE,QAAQA;IACRH,KAAKA;IACLL,SAASA;IACTC,SAASA;IACTC,cAAcA;IACdC,cAAcA;IACdC,aAAaA;EAAAA,IAEZb,KAKL2B,2DACML;IACJf,IAAIA;IACJE,SAASA;IACTC,SAASA;IACTC,cAAcA;IACdC,cAAcA;IACdC,aAAaA;IACbO,MAAMA;IACNhB,UAAUA;IACVW,MAAMA;IAAAA,gBACQpB;IAAAA,cACFE;IAAAA,iBACGD;IACfoB,UAAUA;EAAAA,IAEThB;AAAAA;AAKPP,UAAUmC,cAAc","names":["Touchable","_a","ariaChecked","ariaControls","ariaLabel","block","centered","children","className","component","componentProps","disabled","hideFocus","href","id","inline","onClick","onFocus","onMouseEnter","onMouseLeave","onMouseOver","rel","role","tabIndex","target","to","_b","type","wide","props","cx","styles","resetButtonOrLink","Component","React","displayName"],"sources":["C:\\Users\\russk\\OneDrive\\Documents\\Wealth-Wise\\plaid\\frontend\\node_modules\\src\\Touchable\\index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './Touchable.module.scss';\n\nexport interface TouchableProps {\n  ariaChecked?: boolean;\n  ariaControls?: string;\n  ariaLabel?: string;\n  block?: boolean;\n  centered?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  component?: React.ComponentType<any>;\n  componentProps?: React.ComponentProps<any>;\n  disabled?: boolean;\n  hideFocus?: boolean;\n  href?: string;\n  id?: string;\n  inline?: boolean;\n  onClick?: (event: React.MouseEvent) => void;\n  onFocus?: (event: React.MouseEvent) => void;\n  onMouseEnter?: (event: React.MouseEvent) => void;\n  onMouseLeave?: (event: React.MouseEvent) => void;\n  onMouseOver?: (event: React.MouseEvent) => void;\n  rel?: string;\n  role?: string;\n  tabIndex?: number;\n  target?: string;\n  to?: string;\n  type?: 'button' | 'submit' | 'reset';\n  wide?: boolean;\n}\n\nexport const Touchable: React.FC<TouchableProps> = ({\n  ariaChecked,\n  ariaControls,\n  ariaLabel,\n  block,\n  centered,\n  children,\n  className,\n  component,\n  componentProps,\n  disabled,\n  hideFocus,\n  href,\n  id,\n  inline,\n  onClick,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  onMouseOver,\n  rel,\n  role,\n  tabIndex,\n  target,\n  to,\n  type = 'button',\n  wide,\n}) => {\n  const props = {\n    className: cx(\n      styles.resetButtonOrLink,\n      inline && styles.inline,\n      block && styles.block,\n      wide && styles.wide,\n      hideFocus && styles.hideFocus,\n      centered && styles.centered,\n      className,\n    ),\n    ...componentProps,\n  };\n  if (component) {\n    const Component = component;\n    return (\n      <Component {...props} to={to} role={role}>\n        {children}\n      </Component>\n    );\n  }\n  if (href) {\n    // TODO(swb) consider a11y concerns of this scenario\n    /*eslint jsx-a11y/anchor-has-content: 1 */\n    return (\n      <a\n        {...props}\n        aria-label={ariaLabel}\n        href={href}\n        id={id}\n        role={role}\n        target={target}\n        rel={rel}\n        onClick={onClick}\n        onFocus={onFocus}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseOver={onMouseOver}\n      >\n        {children}\n      </a>\n    );\n  }\n  return (\n    <button\n      {...props}\n      id={id}\n      onClick={onClick}\n      onFocus={onFocus}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseOver={onMouseOver}\n      type={type}\n      disabled={disabled}\n      role={role}\n      aria-checked={ariaChecked}\n      aria-label={ariaLabel}\n      aria-controls={ariaControls}\n      tabIndex={tabIndex}\n    >\n      {children}\n    </button>\n  );\n};\n\nTouchable.displayName = 'Touchable';\nexport default Touchable;\nexport { styles };\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}
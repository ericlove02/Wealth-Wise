{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\russk\\\\OneDrive\\\\Documents\\\\Wealth-Wise\\\\quickstart\\\\frontend\\\\src\\\\Components\\\\Link\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\nimport Button from \"plaid-threads/Button\";\nimport Context from \"../../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Link = () => {\n  _s();\n  const {\n    linkToken,\n    isPaymentInitiation,\n    dispatch\n  } = useContext(Context);\n  const onSuccess = React.useCallback(public_token => {\n    // If the access_token is needed, send public_token to server\n    const exchangePublicTokenForAccessToken = async () => {\n      const response = await fetch(\"/api/set_access_token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n        },\n        body: `public_token=${public_token}`\n      });\n      if (!response.ok) {\n        dispatch({\n          type: \"SET_STATE\",\n          state: {\n            itemId: `no item_id retrieved`,\n            accessToken: `no access_token retrieved`,\n            isItemAccess: false\n          }\n        });\n        return;\n      }\n      const data = await response.json();\n      dispatch({\n        type: \"SET_STATE\",\n        state: {\n          itemId: data.item_id,\n          accessToken: data.access_token,\n          isItemAccess: true\n        }\n      });\n    };\n\n    // 'payment_initiation' products do not require the public_token to be exchanged for an access_token.\n    if (isPaymentInitiation) {\n      dispatch({\n        type: \"SET_STATE\",\n        state: {\n          isItemAccess: false\n        }\n      });\n    } else {\n      exchangePublicTokenForAccessToken();\n    }\n    dispatch({\n      type: \"SET_STATE\",\n      state: {\n        linkSuccess: true\n      }\n    });\n    window.history.pushState(\"\", \"\", \"/\");\n  }, [dispatch]);\n  let isOauth = false;\n  const config = {\n    token: linkToken,\n    onSuccess\n  };\n  if (window.location.href.includes(\"?oauth_state_id=\")) {\n    // TODO: figure out how to delete this ts-ignore\n    // @ts-ignore\n    config.receivedRedirectUri = window.location.href;\n    isOauth = true;\n  }\n  const {\n    open,\n    ready\n  } = usePlaidLink(config);\n  useEffect(() => {\n    if (isOauth && ready) {\n      open();\n    }\n  }, [ready, open, isOauth]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    type: \"button\",\n    large: true,\n    onClick: () => open(),\n    disabled: !ready,\n    children: \"Launch Link\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Link, \"bmoQu3jeIOnGG60alOOhKLq+ha8=\", false, function () {\n  return [usePlaidLink];\n});\n_c = Link;\nLink.displayName = \"Link\";\nexport default Link;\nvar _c;\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"names":["React","useEffect","useContext","usePlaidLink","Button","Context","Link","linkToken","isPaymentInitiation","dispatch","onSuccess","useCallback","public_token","exchangePublicTokenForAccessToken","response","fetch","method","headers","body","ok","type","state","itemId","accessToken","isItemAccess","data","json","item_id","access_token","linkSuccess","window","history","pushState","isOauth","config","token","location","href","includes","receivedRedirectUri","open","ready","displayName"],"sources":["C:/Users/russk/OneDrive/Documents/Wealth-Wise/quickstart/frontend/src/Components/Link/index.tsx"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport { usePlaidLink } from \"react-plaid-link\";\r\nimport Button from \"plaid-threads/Button\";\r\n\r\nimport Context from \"../../Context\";\r\nimport {Products} from \"plaid\";\r\n\r\nconst Link = () => {\r\n  const { linkToken, isPaymentInitiation, dispatch } = useContext(Context);\r\n\r\n  const onSuccess = React.useCallback(\r\n    (public_token: string) => {\r\n      // If the access_token is needed, send public_token to server\r\n      const exchangePublicTokenForAccessToken = async () => {\r\n        const response = await fetch(\"/api/set_access_token\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n          },\r\n          body: `public_token=${public_token}`,\r\n        });\r\n        if (!response.ok) {\r\n          dispatch({\r\n            type: \"SET_STATE\",\r\n            state: {\r\n              itemId: `no item_id retrieved`,\r\n              accessToken: `no access_token retrieved`,\r\n              isItemAccess: false,\r\n            },\r\n          });\r\n          return;\r\n        }\r\n        const data = await response.json();\r\n        dispatch({\r\n          type: \"SET_STATE\",\r\n          state: {\r\n            itemId: data.item_id,\r\n            accessToken: data.access_token,\r\n            isItemAccess: true,\r\n          },\r\n        });\r\n      };\r\n\r\n      // 'payment_initiation' products do not require the public_token to be exchanged for an access_token.\r\n      if (isPaymentInitiation){\r\n        dispatch({ type: \"SET_STATE\", state: { isItemAccess: false } });\r\n      } else {\r\n        exchangePublicTokenForAccessToken();\r\n      }\r\n\r\n      dispatch({ type: \"SET_STATE\", state: { linkSuccess: true } });\r\n      window.history.pushState(\"\", \"\", \"/\");\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  let isOauth = false;\r\n  const config: Parameters<typeof usePlaidLink>[0] = {\r\n    token: linkToken!,\r\n    onSuccess,\r\n  };\r\n\r\n  if (window.location.href.includes(\"?oauth_state_id=\")) {\r\n    // TODO: figure out how to delete this ts-ignore\r\n    // @ts-ignore\r\n    config.receivedRedirectUri = window.location.href;\r\n    isOauth = true;\r\n  }\r\n\r\n  const { open, ready } = usePlaidLink(config);\r\n\r\n  useEffect(() => {\r\n    if (isOauth && ready) {\r\n      open();\r\n    }\r\n  }, [ready, open, isOauth]);\r\n\r\n  return (\r\n    <Button type=\"button\" large onClick={() => open()} disabled={!ready}>\r\n      Launch Link\r\n    </Button>\r\n  );\r\n};\r\n\r\nLink.displayName = \"Link\";\r\n\r\nexport default Link;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AAEzC,OAAOC,OAAO,MAAM,eAAe;AAAC;AAGpC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM;IAAEC,SAAS;IAAEC,mBAAmB;IAAEC;EAAS,CAAC,GAAGP,UAAU,CAACG,OAAO,CAAC;EAExE,MAAMK,SAAS,GAAGV,KAAK,CAACW,WAAW,CAChCC,YAAoB,IAAK;IACxB;IACA,MAAMC,iCAAiC,GAAG,YAAY;MACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;QACpDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAG,gBAAeN,YAAa;MACrC,CAAC,CAAC;MACF,IAAI,CAACE,QAAQ,CAACK,EAAE,EAAE;QAChBV,QAAQ,CAAC;UACPW,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAE;YACLC,MAAM,EAAG,sBAAqB;YAC9BC,WAAW,EAAG,2BAA0B;YACxCC,YAAY,EAAE;UAChB;QACF,CAAC,CAAC;QACF;MACF;MACA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;MAClCjB,QAAQ,CAAC;QACPW,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE;UACLC,MAAM,EAAEG,IAAI,CAACE,OAAO;UACpBJ,WAAW,EAAEE,IAAI,CAACG,YAAY;UAC9BJ,YAAY,EAAE;QAChB;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,IAAIhB,mBAAmB,EAAC;MACtBC,QAAQ,CAAC;QAAEW,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;UAAEG,YAAY,EAAE;QAAM;MAAE,CAAC,CAAC;IACjE,CAAC,MAAM;MACLX,iCAAiC,EAAE;IACrC;IAEAJ,QAAQ,CAAC;MAAEW,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;QAAEQ,WAAW,EAAE;MAAK;IAAE,CAAC,CAAC;IAC7DC,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EACvC,CAAC,EACD,CAACvB,QAAQ,CAAC,CACX;EAED,IAAIwB,OAAO,GAAG,KAAK;EACnB,MAAMC,MAA0C,GAAG;IACjDC,KAAK,EAAE5B,SAAU;IACjBG;EACF,CAAC;EAED,IAAIoB,MAAM,CAACM,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;IACrD;IACA;IACAJ,MAAM,CAACK,mBAAmB,GAAGT,MAAM,CAACM,QAAQ,CAACC,IAAI;IACjDJ,OAAO,GAAG,IAAI;EAChB;EAEA,MAAM;IAAEO,IAAI;IAAEC;EAAM,CAAC,GAAGtC,YAAY,CAAC+B,MAAM,CAAC;EAE5CjC,SAAS,CAAC,MAAM;IACd,IAAIgC,OAAO,IAAIQ,KAAK,EAAE;MACpBD,IAAI,EAAE;IACR;EACF,CAAC,EAAE,CAACC,KAAK,EAAED,IAAI,EAAEP,OAAO,CAAC,CAAC;EAE1B,oBACE,QAAC,MAAM;IAAC,IAAI,EAAC,QAAQ;IAAC,KAAK;IAAC,OAAO,EAAE,MAAMO,IAAI,EAAG;IAAC,QAAQ,EAAE,CAACC,KAAM;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAE3D;AAEb,CAAC;AAAC,GA3EInC,IAAI;EAAA,QA8DgBH,YAAY;AAAA;AAAA,KA9DhCG,IAAI;AA6EVA,IAAI,CAACoC,WAAW,GAAG,MAAM;AAEzB,eAAepC,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
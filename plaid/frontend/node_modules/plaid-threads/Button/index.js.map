{"version":3,"file":"index.js","sources":["../../src/Button/index.tsx"],"sourcesContent":["import React, { FunctionComponent, MouseEvent } from 'react';\nimport cx from 'classnames';\nimport ChevronS1Right from '../Icons/ChevronS1Right';\nimport ChevronS2Right from '../Icons/ChevronS2Right';\nimport Touchable, { TouchableProps } from '../Touchable';\n\nimport styles from './Button.module.scss';\n\nexport interface Props extends TouchableProps {\n  animatedCaret?: boolean;\n  large?: boolean;\n  onClick?: (e: MouseEvent) => void;\n  secondary?: boolean;\n  small?: boolean;\n  submitting?: boolean;\n}\n\nexport const Button: FunctionComponent<Props> = ({\n  animatedCaret,\n  children,\n  centered,\n  className,\n  disabled,\n  inline,\n  submitting,\n  large,\n  role,\n  secondary,\n  small,\n  ...restProps\n}) => (\n  <Touchable\n    block={!inline}\n    className={cx(\n      styles.button,\n      disabled && styles.disabled,\n      inline && styles.inline,\n      large && styles.large,\n      submitting && styles.submitting,\n      secondary && styles.secondary,\n      small && styles.small,\n      centered && styles.centered,\n      className,\n    )}\n    disabled={disabled || submitting}\n    role={role ? role : 'button'}\n    {...restProps}\n  >\n    <span className={cx(styles.flex)}>\n      <span className={styles.text}>{children}</span>\n      {!centered && (\n        <span\n          className={cx(styles.caret, animatedCaret && styles.animatedCaret)}\n        >\n          {small ? (\n            <ChevronS2Right\n              className={cx(styles.icon, animatedCaret && styles.secondaryIcon)}\n            />\n          ) : (\n            <ChevronS1Right\n              className={cx(styles.icon, animatedCaret && styles.secondaryIcon)}\n            />\n          )}\n          {animatedCaret &&\n            (small ? (\n              <ChevronS2Right className={styles.icon} />\n            ) : (\n              <ChevronS1Right className={styles.icon} />\n            ))}\n        </span>\n      )}\n    </span>\n  </Touchable>\n);\n\n// Button.defaultProps = { appearance: Appearance.PRIMARY };\nButton.displayName = 'Button';\nexport default Button;\nexport { styles };\n"],"names":["Button","_a","animatedCaret","children","centered","className","disabled","inline","submitting","large","role","secondary","small","restProps","React","Touchable","block","cx","styles","button","flex","text","caret","ChevronS2Right","icon","secondaryIcon","ChevronS1Right","displayName"],"mappings":"0sWAiBaA,OAAmC,SAACC,GAC/C,IAAAC,kBACAC,aACAC,aACAC,cACAC,aACAC,WACAC,eACAC,UACAC,SACAC,cACAC,UACAC,2IACI,OACJC,6BAACC,+BACCC,OAAQT,EACRF,UAAWY,GACTC,OAAOC,OACPb,GAAYY,OAAOZ,SACnBC,GAAUW,OAAOX,OACjBE,GAASS,OAAOT,MAChBD,GAAcU,OAAOV,WACrBG,GAAaO,OAAOP,UACpBC,GAASM,OAAON,MAChBR,GAAYc,OAAOd,SACnBC,GAEFC,SAAUA,GAAYE,EACtBE,KAAMA,GAAc,UAChBG,GAEJC,qCAAMT,UAAWY,GAAGC,OAAOE,OACzBN,qCAAMT,UAAWa,OAAOG,MAAOlB,IAC7BC,GACAU,qCACET,UAAWY,GAAGC,OAAOI,MAAOpB,GAAiBgB,OAAOhB,gBAEnDU,EACCE,6BAACS,wBACClB,UAAWY,GAAGC,OAAOM,KAAMtB,GAAiBgB,OAAOO,iBAGrDX,6BAACY,wBACCrB,UAAWY,GAAGC,OAAOM,KAAMtB,GAAiBgB,OAAOO,iBAGtDvB,IACEU,EACCE,6BAACS,wBAAelB,UAAWa,OAAOM,OAElCV,6BAACY,wBAAerB,UAAWa,OAAOM,YAShDxB,OAAO2B,YAAc"}
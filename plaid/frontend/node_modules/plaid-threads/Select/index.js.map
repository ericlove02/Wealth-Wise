{"version":3,"file":"index.js","sources":["../../src/Select/Select.styles.ts","../../src/Select/index.tsx"],"sourcesContent":["import { Styles } from 'react-select';\nimport colors from '../styles/colors';\n\nconst units = (i: number) => `${(i * 0.8).toFixed(1)}rem`;\n\nconst styles: Styles = {\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    alignItems: 'flex-start',\n  }),\n  clearIndicator: (provided, state) => ({\n    ...provided,\n    paddingLeft: 0,\n    paddingRight: 0,\n    color: colors.black600,\n    ':hover': {\n      color: colors.blue800,\n    },\n  }),\n  container: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.selectProps.isDarkMode\n      ? colors.black1000\n      : colors.white,\n    minHeight: units(6),\n  }),\n  control: (provided, state) => {\n    const borderColor = state.isFocused\n      ? colors.blue800\n      : state.selectProps.isDarkMode\n      ? colors.black400\n      : colors.black600;\n    return {\n      ...provided,\n      position: 'unset',\n      minHeight: units(6),\n      backgroundColor: 'transparent',\n      borderColor: state.selectProps.errorMessage ? colors.red800 : borderColor,\n      borderRadius: '0.2rem',\n      color: state.selectProps.isDarkMode ? colors.black400 : 'inherit',\n      paddingTop: '0.3rem',\n      paddingBottom: '0.3rem',\n      // borderBottomRightRadius: state.isFocused ? 0 : undefined,\n      // borderBottomLeftRadius: state.isFocused ? 0 : undefined,\n      cursor: 'pointer',\n      boxShadow: 'none',\n      ':hover': {\n        borderColor: state.selectProps.errorMessage\n          ? colors.red800\n          : borderColor,\n      },\n    };\n  },\n  input: (provided, state) => ({\n    marginLeft: units(1),\n    fontFamily: 'Cern, Helvetica, Arial, sans-serif',\n    fontWeight: 'normal',\n  }),\n  dropdownIndicator: (provided, state) => ({\n    ...provided,\n    paddingLeft: 0,\n    color: colors.black600,\n    // transition: 'transform 350ms cubic-bezier(0.23, 1.2, 0.32, 1)',\n    transform: state.isFocused\n      ? 'rotate3d(1, 0, 0, 180deg)'\n      : 'rotate3d(1, 0, 0, 0deg)',\n  }),\n  group: (provided, state) => ({\n    ...provided,\n    color: state.selectProps.isDarkMode ? colors.black400 : colors.black1000,\n    paddingBottom: 0,\n  }),\n  groupHeading: (provided, state) => ({\n    ...provided,\n    paddingLeft: units(2),\n    color: 'inherit',\n    fontFamily: 'Inconsolata, Helvetica, Arial, sans-serif',\n    fontSize: '1.4rem',\n    lineHeight: 1.33,\n    letterSpacing: 1,\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    borderBottomWidth: '1px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: colors.black200,\n    marginBottom: 0,\n    paddingBottom: units(1),\n  }),\n  indicatorSeparator: (provided, state) => ({\n    ...provided,\n    display: 'none',\n  }),\n  menu: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.selectProps.isDarkMode\n      ? colors.black1000\n      : colors.white,\n    top: 'unset',\n    marginTop: -2,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 2,\n    borderBottomLeftRadius: 2,\n    border: '1px',\n    borderStyle: 'solid',\n    borderColor: state.selectProps.errorMessage\n      ? colors.red800\n      : colors.blue800,\n    borderTop: 0,\n    boxShadow: '0 0.2rem 0.4rem 0 rgba(17, 17, 17, 0.08)',\n  }),\n  menuList: (provided, state) => ({\n    ...provided,\n    padding: 0,\n    borderTopWidth: '1px',\n    borderTopStyle: 'solid',\n    borderTopColor: state.selectProps.isDarkMode\n      ? colors.black800\n      : colors.black200,\n  }),\n  multiValue: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.selectProps.isDarkMode\n      ? colors.black900\n      : colors.black100,\n    height: units(4),\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: units(0.5),\n    marginRight: units(1),\n    marginBottom: units(0.5),\n    marginLeft: 0,\n    cursor: 'default',\n    color: state.selectProps.isDarkMode ? colors.black500 : colors.black1000,\n    position: 'relative',\n    ':hover': {\n      color: colors.blue800,\n    },\n  }),\n  multiValueLabel: (provided, state) => ({\n    ...provided,\n    color: 'inherit',\n    paddingLeft: units(1),\n    fontSize: units(2),\n    paddingRight: units(3.5),\n    marginLeft: 0,\n  }),\n  multiValueRemove: (provided, state) => ({\n    ...provided,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    padding: 0,\n    color: state.selectProps.isDarkMode ? colors.black400 : colors.black1000,\n    cursor: 'pointer',\n    ':hover': {\n      color: colors.blue800,\n      backgroundColor: 'transparent',\n    },\n  }),\n  noOptionsMessage: (provided, state) => ({\n    ...provided,\n    color: state.selectProps.isDarkMode ? colors.black400 : colors.black1000,\n    paddingLeft: units(2),\n    paddingRight: units(2),\n    paddingTop: 0,\n    paddingBottom: 0,\n    height: units(6),\n    lineHeight: units(6),\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    color: state.selectProps.isDarkMode ? colors.black400 : colors.black1000,\n    paddingLeft: units(2),\n    paddingRight: units(1),\n    paddingTop: units(2),\n    paddingBottom: units(2),\n    minHeight: units(6),\n    lineHeight: units(3),\n    cursor: 'pointer',\n    backgroundColor: state.isFocused\n      ? state.selectProps.isDarkMode\n        ? colors.black900\n        : colors.black100\n      : 'transparent',\n    ':hover': {\n      backgroundColor: state.selectProps.isDarkMode\n        ? colors.black900\n        : colors.black100,\n    },\n    ':hover:last-child': {\n      borderBottomLeftRadius: 2,\n      borderBottomRightRadius: 2,\n    },\n  }),\n  placeholder: (provided, state) => ({\n    ...provided,\n    fontWeight: 'normal',\n    color: colors.black600,\n    marginLeft: 0,\n    paddingLeft: units(1),\n    pointerEvents: 'none',\n  }),\n  singleValue: (provided, state) => ({\n    ...provided,\n    color: state.selectProps.isDarkMode ? colors.black400 : colors.black1000,\n    marginLeft: units(1),\n  }),\n  valueContainer: (provided, state) => ({\n    ...provided,\n    paddingLeft: units(1),\n    paddingTop: 0,\n    paddingBottom: 0,\n  }),\n};\n\nexport default styles;\n","import React from 'react';\nimport ReactSelect, {\n  Props as ReactSelectProps,\n  components,\n} from 'react-select';\nimport cx from 'classnames';\n\nimport ChevronS1Down from '../Icons/ChevronS1Down';\nimport CloseS2 from '../Icons/CloseS2';\nimport CloseS1 from '../Icons/CloseS1';\nimport Checkmark from '../Icons/Checkmark';\n\nimport reactSelectStyles from './Select.styles';\nimport baseStyles from '../BaseInput/BaseInput.module.scss';\nimport styles from './Select.module.scss';\n\ninterface OverrideProps {\n  label: string;\n  id: string;\n  errorMessage?: string;\n}\n\ninterface OwnProps {\n  controlClassName?: Parameters<typeof cx>[0];\n}\n\ntype Props = Pick<\n  ReactSelectProps,\n  Exclude<keyof ReactSelectProps, 'id' | 'label'>\n> &\n  OverrideProps &\n  OwnProps;\n\n// @ts-ignore\nconst Control = props => (\n  <components.Control\n    className={props.selectProps.controlClassName}\n    {...props}\n  />\n);\n\n// @ts-ignore\nconst SelectContainer = props => (\n  <fieldset\n    className={cx(\n      baseStyles.container,\n      props.selectProps.disabled && baseStyles.readOnly,\n      props.selectProps.className,\n    )}\n  >\n    <components.SelectContainer {...props} className={null}>\n      <label\n        className={cx(\n          baseStyles.label,\n          props.selectProps.isDarkMode && baseStyles.labelDark,\n          (props.hasValue ||\n            props.isFocused ||\n            props.selectProps.errorMessage ||\n            props.selectProps.placeholder) && [\n            baseStyles.floatLabel,\n            props.selectProps.isDarkMode && baseStyles.floatLabelDark,\n          ],\n        )}\n        htmlFor={props.selectProps.id}\n      >\n        {props.selectProps.errorMessage\n          ? props.selectProps.errorMessage\n          : props.selectProps.label}\n      </label>\n      {props.children}\n    </components.SelectContainer>\n  </fieldset>\n);\n\n// @ts-ignore\nconst DropdownIndicator = props => (\n  <components.DropdownIndicator {...props}>\n    <ChevronS1Down />\n  </components.DropdownIndicator>\n);\n\n// @ts-ignore\nconst ClearIndicator = props => (\n  <components.ClearIndicator {...props}>\n    <CloseS1 />\n  </components.ClearIndicator>\n);\n\n// @ts-ignore\nconst MultiValueRemove = props => (\n  <components.MultiValueRemove {...props}>\n    <CloseS2 className={cx(styles.multiValueRemove)} />\n  </components.MultiValueRemove>\n);\n\n// @ts-ignore\nconst Option = props => (\n  <components.Option {...props}>\n    {props.children} {props.isSelected ? <Checkmark /> : null}\n  </components.Option>\n);\n\n// @ts-ignore\nconst Input = props => (\n  <components.Input {...props} className={cx(props.className, styles.input)} />\n);\n\nexport const Select: React.FC<Props> = props => (\n  <ReactSelect\n    {...props}\n    blurInputOnSelect={!props.isMulti ? true : false}\n    placeholder={props.placeholder ? props.placeholder : ''}\n    isClearable={props.isClearable}\n    isDisabled={props.disabled}\n    openMenuOnFocus={true}\n    tabSelectsValue={false}\n    closeMenuOnSelect={\n      props.closeMenuOnSelect != null ? props.closeMenuOnSelect : !props.isMulti\n    }\n    isDarkMode={props.isDarkMode}\n    styles={reactSelectStyles}\n    components={{\n      ClearIndicator,\n      Control,\n      DropdownIndicator,\n      Input,\n      MultiValueRemove,\n      Option,\n      SelectContainer,\n    }}\n  />\n);\n\nSelect.displayName = 'Select';\nexport default Select;\nexport { styles };\n"],"names":["units","i","toFixed","styles","indicatorsContainer","provided","state","alignItems","clearIndicator","paddingLeft","paddingRight","color","colors","black600",":hover","blue800","container","backgroundColor","selectProps","isDarkMode","black1000","white","minHeight","control","borderColor","isFocused","black400","position","errorMessage","red800","borderRadius","paddingTop","paddingBottom","cursor","boxShadow","input","marginLeft","fontFamily","fontWeight","dropdownIndicator","transform","group","groupHeading","fontSize","lineHeight","letterSpacing","textTransform","borderBottomWidth","borderBottomStyle","borderBottomColor","black200","marginBottom","indicatorSeparator","display","menu","top","marginTop","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","border","borderStyle","borderTop","menuList","padding","borderTopWidth","borderTopStyle","borderTopColor","black800","multiValue","black900","black100","height","marginRight","black500","multiValueLabel","multiValueRemove","width","noOptionsMessage","option","justifyContent",":hover:last-child","placeholder","pointerEvents","singleValue","valueContainer","Control","props","React","components","className","controlClassName","SelectContainer","cx","baseStyles","disabled","readOnly","label","labelDark","hasValue","floatLabel","floatLabelDark","htmlFor","id","children","DropdownIndicator","ChevronS1Down","ClearIndicator","CloseS1","MultiValueRemove","CloseS2","Option","isSelected","Checkmark","Input","Select","ReactSelect","blurInputOnSelect","isMulti","isClearable","isDisabled","openMenuOnFocus","tabSelectsValue","closeMenuOnSelect","reactSelectStyles","displayName"],"mappings":"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"}
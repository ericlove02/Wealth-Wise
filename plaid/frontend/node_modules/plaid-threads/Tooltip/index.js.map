{"version":3,"file":"index.js","sources":["../../src/Tooltip/index.tsx"],"sourcesContent":["import cx from 'classnames';\nimport React, { CSSProperties, useEffect, useState } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport styles from './Tooltip.module.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n  className?: Parameters<typeof cx>[0];\n  id?: string;\n  block?: boolean;\n  placement: 'right' | 'left' | 'top' | 'bottom' | 'top-end' | 'bottom-end';\n  showOn: 'hover' | 'click' | 'focus';\n  style?: CSSProperties;\n  target: React.ReactElement;\n  wrapperClassName?: Parameters<typeof cx>[0];\n  clickable?: boolean;\n  // https://popper.js.org/docs/v2/modifiers/offset/\n  offset?: [number, number];\n  onShow?: () => void;\n  onHide?: () => void;\n  onEscape?: () => void;\n}\n\ninterface WrapperProps {\n  onClick?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport const Tooltip: React.FC<Props> = props => {\n  const [targetElement, setTargetElement] = useState<HTMLDivElement | null>(\n    null,\n  );\n  const [tooltipElement, setTooltipElement] = useState<HTMLDivElement | null>(\n    null,\n  );\n  const popperPlacement = (placement => {\n    switch (placement) {\n      case 'right':\n        return 'right-start';\n      case 'left':\n        return 'left-start';\n      default:\n        return placement;\n    }\n  })(props.placement);\n\n  const popper = usePopper(targetElement, tooltipElement, {\n    strategy: 'fixed',\n    placement: popperPlacement,\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          // https://popper.js.org/docs/v2/modifiers/offset/\n          offset: props.offset || [0, 10],\n        },\n      },\n    ],\n  });\n\n  const [show, setShow] = React.useState(false);\n\n  const showTooltip = () => {\n    if (!show) {\n      props.onShow && props.onShow();\n      setShow(true);\n    }\n  };\n  const hideTooltip = () => {\n    if (show) {\n      props.onHide && props.onHide();\n      setShow(false);\n    }\n  };\n\n  const toggleShowTooltip = () => {\n    if (show) {\n      hideTooltip();\n    } else {\n      showTooltip();\n    }\n  };\n\n  useEffect(() => {\n    const onTooltipMouseEnter = () => showTooltip();\n    const onTooltipMouseLeave = () => hideTooltip();\n\n    if (props.clickable && tooltipElement) {\n      tooltipElement.addEventListener('mouseenter', onTooltipMouseEnter);\n      tooltipElement.addEventListener('mouseleave', onTooltipMouseLeave);\n    }\n\n    /**\n     * Buggy: this is triggered when interactive elements in the Tooltip are clicked as well because\n     * event.currentTarget is always `document`\n     */\n    const clickOutsideHandler = (event: MouseEvent) => {\n      if (\n        tooltipElement &&\n        event.target instanceof Node &&\n        !tooltipElement.contains(event.target)\n      ) {\n        props.onEscape && props.onEscape();\n        hideTooltip();\n      }\n    };\n\n    const escapeKeyHandler = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) {\n        props.onEscape && props.onEscape();\n        hideTooltip();\n      }\n    };\n\n    // For tooltips that show/hide on target click, also handle escaping via outside click or escape key\n    if (props.showOn === 'click') {\n      document.addEventListener('click', clickOutsideHandler);\n      document.addEventListener('keyup', escapeKeyHandler);\n    }\n\n    return () => {\n      if (props.clickable && tooltipElement) {\n        tooltipElement.removeEventListener('mouseenter', onTooltipMouseEnter);\n        tooltipElement.removeEventListener('mouseleave', onTooltipMouseLeave);\n      }\n\n      if (props.showOn === 'click') {\n        document.removeEventListener('click', clickOutsideHandler);\n        document.removeEventListener('keyup', escapeKeyHandler);\n      }\n    };\n  });\n\n  const wrapperProps: WrapperProps = {};\n  switch (props.showOn) {\n    case 'click':\n      wrapperProps.onClick = toggleShowTooltip;\n      break;\n    case 'focus':\n      wrapperProps.onFocus = showTooltip;\n      wrapperProps.onBlur = hideTooltip;\n      break;\n    case 'hover':\n      wrapperProps.onMouseEnter = showTooltip;\n      wrapperProps.onMouseLeave = hideTooltip;\n  }\n\n  return (\n    <>\n      <div\n        className={cx(\n          styles.wrapper,\n          props.block && styles.block,\n          props.wrapperClassName,\n        )}\n        ref={setTargetElement}\n        {...wrapperProps}\n      >\n        {props.target}\n      </div>\n      <div\n        style={popper.styles.popper}\n        className={cx(\n          styles.tooltip,\n          props.showOn !== 'click' &&\n            props.clickable &&\n            styles.tooltipClickable,\n          show && styles.showTooltip,\n          props.className,\n        )}\n        role='tooltip'\n        {...popper.attributes.popper}\n        ref={setTooltipElement}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n};\n\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;\nexport { styles };\n"],"names":["Tooltip","props","_a","targetElement","setTargetElement","_b","tooltipElement","setTooltipElement","popperPlacement","placement","popper","usePopper","strategy","modifiers","name","options","offset","_c","show","setShow","showTooltip","onShow","hideTooltip","onHide","useEffect","onTooltipMouseEnter","onTooltipMouseLeave","clickable","addEventListener","clickOutsideHandler","event","target","Node","contains","onEscape","escapeKeyHandler","keyCode","showOn","document","removeEventListener","wrapperProps","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","React","className","cx","styles","wrapper","block","wrapperClassName","ref","style","tooltip","tooltipClickable","role","attributes","children","displayName"],"mappings":"4pGAgCaA,QAA2B,SAAAC,GAChC,IAAAC,uBAACC,OAAeC,OAGhBC,uBAACC,OAAgBC,OAGjBC,EAAkB,SAACC,GACvB,OAAQA,GACN,IAAK,QACH,MAAO,cACT,IAAK,OACH,MAAO,aACT,QACE,OAAOA,GAPW,CASrBR,EAAMQ,WAEHC,EAASC,sBAAUR,EAAeG,EAAgB,CACtDM,SAAU,QACVH,UAAWD,EACXK,UAAW,CACT,CACEC,KAAM,SACNC,QAAS,CAEPC,OAAQf,EAAMe,QAAU,CAAC,EAAG,SAM9BC,8BAACC,OAAMC,OAEPC,EAAc,WACbF,IACHjB,EAAMoB,QAAUpB,EAAMoB,SACtBF,GAAQ,KAGNG,EAAc,WACdJ,IACFjB,EAAMsB,QAAUtB,EAAMsB,SACtBJ,GAAQ,KAYZK,iBAAU,WACR,IAAMC,EAAsB,WAAM,OAAAL,KAC5BM,EAAsB,WAAM,OAAAJ,KAE9BrB,EAAM0B,WAAarB,IACrBA,EAAesB,iBAAiB,aAAcH,GAC9CnB,EAAesB,iBAAiB,aAAcF,IAOhD,IAAMG,EAAsB,SAACC,GAEzBxB,GACAwB,EAAMC,kBAAkBC,OACvB1B,EAAe2B,SAASH,EAAMC,UAE/B9B,EAAMiC,UAAYjC,EAAMiC,WACxBZ,MAIEa,EAAmB,SAACL,GACF,KAAlBA,EAAMM,UACRnC,EAAMiC,UAAYjC,EAAMiC,WACxBZ,MAUJ,MALqB,UAAjBrB,EAAMoC,SACRC,SAASV,iBAAiB,QAASC,GACnCS,SAASV,iBAAiB,QAASO,IAG9B,WACDlC,EAAM0B,WAAarB,IACrBA,EAAeiC,oBAAoB,aAAcd,GACjDnB,EAAeiC,oBAAoB,aAAcb,IAG9B,UAAjBzB,EAAMoC,SACRC,SAASC,oBAAoB,QAASV,GACtCS,SAASC,oBAAoB,QAASJ,QAK5C,IAAMK,EAA6B,GACnC,OAAQvC,EAAMoC,QACZ,IAAK,QACHG,EAAaC,QA7DS,WACpBvB,EACFI,IAEAF,KA0DA,MACF,IAAK,QACHoB,EAAaE,QAAUtB,EACvBoB,EAAaG,OAASrB,EACtB,MACF,IAAK,QACHkB,EAAaI,aAAexB,EAC5BoB,EAAaK,aAAevB,EAGhC,OACEwB,0DACEA,oDACEC,UAAWC,GACTC,OAAOC,QACPjD,EAAMkD,OAASF,OAAOE,MACtBlD,EAAMmD,kBAERC,IAAKjD,GACDoC,GAEHvC,EAAM8B,QAETe,oDACEQ,MAAO5C,EAAOuC,OAAOvC,OACrBqC,UAAWC,GACTC,OAAOM,QACU,UAAjBtD,EAAMoC,QACJpC,EAAM0B,WACNsB,OAAOO,iBACTtC,GAAQ+B,OAAO7B,YACfnB,EAAM8C,WAERU,KAAK,WACD/C,EAAOgD,WAAWhD,QACtB2C,IAAK9C,IAEJN,EAAM0D,YAMf3D,QAAQ4D,YAAc"}
@import '../styles/variables';

/*
 * Responsive Mixin
 * Applies CSS in a mobile-first way
 * Supports 'md', and 'lg' breakpoints
 */

@mixin breakpoint($size) {
  @if $size == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  }
  @if $size == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
}

@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::placeholder') {
    @content;
  }

  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root(':-moz-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}

@function units($num) {
  @return $num * $unit;
}

@mixin generateGrid($cols, $gap) {
  $screenSizes: (small medium large);

  .column {
    box-sizing: border-box;
    flex: 1 1 100%;
    margin-right: #{$gap};
    position: relative;
    text-align: left;
    &.centeredContent {
      justify-content: center;
      text-align: center;
    }
    &.allowOverflow {
      overflow: visible;
    }
  }

  .column:last-child {
    @include breakpoint(medium) {
      margin-right: 0;
    }
  }

  $columnWidth: (100% / $cols);

  @each $size in $screenSizes {
    @for $i from 1 through $cols {
      .#{$size}#{$i} {
        @include breakpoint($size) {
          display: block;
          overflow: hidden;
          @if $i != $cols {
            flex-basis: calc((#{$columnWidth} * #{$i}) - #{$gap});
          } @else {
            flex-basis: calc(#{$columnWidth} * #{$i});
          }

          @if $size == 'small' and $i == $cols {
            flex-grow: 1;
          } @else {
            flex-grow: 0;
          }
        }
      }
      .#{$size}Order#{$i} {
        @if $size == 'large' {
          @include breakpoint($size) {
            order: $i;
          }
        } @else {
          @include breakpoint($size only) {
            order: $i;
          }
        }
      }
    }
    .#{$size}Order0 {
      @if $size == 'large' {
        @include breakpoint($size) {
          order: 0;
        }
      } @else {
        @include breakpoint($size only) {
          order: 0;
        }
      }
    }
    .#{$size}Auto {
      @include breakpoint($size) {
        flex: 1;
      }
    }
    .#{$size}Hide {
      @include breakpoint($size) {
        display: none;
      }
    }
  }
}
